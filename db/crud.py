from models import User, Favorite, Blacklist, Photo
from db import get_session


# -------------------- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã User--------------------
def add_to_user(user_data: dict) -> User:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É User
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç User
    """
    with get_session() as session:
        try:
            user = User(
                vk_id=user_data['vk_id'],
                first_name=user_data.get('first_name'),
                last_name=user_data.get('last_name'),
                age=user_data.get('age'),
                sex=user_data.get('sex'),
                city=user_data.get('city'),
                music=user_data.get('music'),
                books=user_data.get('books'),
                # groups=user_data.get('groups')
            )
            session.add(user)
            session.commit()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['vk_id']} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î")
            return type(user).__name__
        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return type(e).__name__


def get_user(vk_id: int):
    """
    –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ User –ø–æ –∞—Ç—Ä–∏–±—É—Ç—É vk_id
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç User
    """
    with get_session() as session:
        try:
            user = session.query(User).filter(User.vk_id == vk_id).first()
            if user:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name} {user.last_name} (VK ID: {user.vk_id})")
                return user
            else:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å VK ID {vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return None


def update_user(vk_id: int, update_data: dict) -> bool:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Ç–∞–±–ª–∏—Ü–µ User
    vk_id - VK ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
    update_data - —Å–ª–æ–≤–∞—Ä—å —Å –ø–æ–ª—è–º–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    with get_session() as session:
        try:
            # –ö–æ–≥–æ –æ–±–Ω–æ–≤–ª—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ User
            user = session.query(User).filter(User.vk_id == vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å VK ID {vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—è
            for field, value in update_data.items():
                if hasattr(user, field):
                    setattr(user, field, value)
                    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª–µ {field}: {value}")
                else:
                    print(f"‚ö†Ô∏è –ü–æ–ª–µ {field} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ User")

            session.commit()
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {vk_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            return True

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return False


def delete_user(user_vk_id: int) -> bool:
    """
    –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã User –∏ –≤—Å–µ –µ–≥–æ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    with get_session() as session:
        try:
            # –ö–æ–≥–æ —É–¥–∞–ª—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ User
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü Favorite, Blacklist, Photo
            session.query(Favorite).filter(Favorite.user_id == user.id).delete()
            session.query(Blacklist).filter(Blacklist.user_id == user.id).delete()
            session.query(Photo).filter(Photo.vk_id == user_vk_id).delete()

            # –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã User
            session.delete(user)
            session.commit()

            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
            return True

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return False

# -------------------- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã Favorite--------------------
def add_to_favorite(user_vk_id: int, favorite_vk_id: int) -> Favorite:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É Favorite (–∏–∑–±—Ä–∞–Ω–Ω–æ–µ)
    user_vk_id - –∫—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ User)
    favorite_vk_id - –∫–æ–≥–æ –¥–æ–±–∞–≤–ª—è—é—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç Favorite
    """
    with get_session() as session:
        try:
            # –ö—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ User
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–º–∏—Ö —Å–µ–±—è
            if user_vk_id == favorite_vk_id:
                print("‚ùå –ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
                return None

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Ç –ª–∏ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
            existing_favorite = session.query(Favorite).filter(
                Favorite.user_id == user.id,
                Favorite.favorite_vk_id == favorite_vk_id
            ).first()

            if existing_favorite:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {favorite_vk_id} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º")
                return existing_favorite

            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
            favorite = Favorite(
                user_id=user.id,
                favorite_vk_id=favorite_vk_id
            )
            session.add(favorite)
            session.commit()

            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {favorite_vk_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return favorite

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {e}")
            return None


def get_all_favorite(user_vk_id: int) -> list:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Favorite (–∏–∑–±—Ä–∞–Ω–Ω–æ–µ) –ø–æ user_vk_id
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ Favorite
    """
    with get_session() as session:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return []

            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            favorites = session.query(Favorite).filter(
                Favorite.user_id == user.id
            ).all()

            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(favorites)} –∑–∞–ø–∏—Å–µ–π –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return favorites

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {e}")
            return []


def get_favorite_list_favorite_vk_id(user_vk_id: int) -> list:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ VK ID –≤—Å–µ—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ VK ID
    """
    with get_session() as session:
        try:
            # –Ø–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return []

            favorites = get_all_favorite(user_vk_id)
            return [fav.favorite_vk_id for fav in favorites]

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö ID: {e}")
            return []


def delete_from_favorite(user_vk_id: int, favorite_vk_id: int) -> bool:
    """
    –£–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Favorite (–∏–∑–±—Ä–∞–Ω–Ω–æ–µ)
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    """
    with get_session() as session:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª—è–µ—Ç –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            favorite = session.query(Favorite).filter(
                Favorite.user_id == user.id,
                Favorite.favorite_vk_id == favorite_vk_id
            ).first()

            if not favorite:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {favorite_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
                return False

            session.delete(favorite)
            session.commit()

            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {favorite_vk_id} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return True

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {e}")
            return False

# -------------------- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã Blacklist--------------------
def add_to_blacklist(user_vk_id: int, blocked_vk_id: int) -> Blacklist:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É Blacklist (—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫)
    user_vk_id - –∫—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ User)
    blocked_vk_id - –∫–æ–≥–æ –¥–æ–±–∞–≤–ª—è—é—Ç –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç Blacklist
    """
    with get_session() as session:
        try:
            # –ö—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ User
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–º–∏—Ö —Å–µ–±—è
            if user_vk_id == blocked_vk_id:
                print("‚ùå –ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")
                return None

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Ç –ª–∏ —É–∂–µ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
            existing_blacklist = session.query(Blacklist).filter(
                Blacklist.user_id == user.id,
                Blacklist.blocked_vk_id == blocked_vk_id
            ).first()

            if existing_blacklist:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {blocked_vk_id} —É–∂–µ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ")
                return existing_blacklist

            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
            blacklisted = Blacklist(
                user_id=user.id,
                blocked_vk_id=blocked_vk_id
            )
            session.add(blacklisted)
            session.commit()

            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {blocked_vk_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return blacklisted

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫: {e}")
            return None


def get_all_blacklist(user_vk_id: int) -> list:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Blacklist (—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫) –ø–æ user_vk_id
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ Blacklist
    """
    with get_session() as session:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return []

            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            blacklists = session.query(Blacklist).filter(
                Blacklist.user_id == user.id
            ).all()

            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(blacklists)} –∑–∞–ø–∏—Å–µ–π –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return blacklists

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}")
            return []


def get_blacklist_list_blocked_vk_id(user_vk_id: int) -> list:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ VK ID –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ VK ID
    """
    with get_session() as session:
        try:
            # –Ø–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return []

            blacklist = get_all_blacklist(user_vk_id)
            return [blocked.blocked_vk_id for blocked in blacklist]

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö ID: {e}")
            return []


def delete_from_blacklist(user_vk_id: int, blocked_vk_id: int) -> bool:
    """
    –£–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Blacklist (—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫)
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    """
    with get_session() as session:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª—è–µ—Ç –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            blacklisted = session.query(Blacklist).filter(
                Blacklist.user_id == user.id,
                Blacklist.blocked_vk_id == blocked_vk_id
            ).first()

            if not blacklisted:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {blocked_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
                return False

            session.delete(blacklisted)
            session.commit()

            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {blocked_vk_id} —É–¥–∞–ª–µ–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return True

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}")
            return False

# -------------------- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã Photo--------------------
def add_photo(user_vk_id: int, photo_url: str, likes_count: int = 0) -> Photo:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É Photo
    user_vk_id - –∫—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü—É Photo (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ User)
    photo_url - URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    likes_count - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç Photo
    """
    with get_session() as session:
        try:
            # –ö—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü—É Photo, –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ User
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ —Ñ–æ—Ç–æ
            existing_photo = session.query(Photo).filter(
                Photo.vk_id == user_vk_id,
                Photo.url == photo_url
            ).first()

            if existing_photo:
                print(f"‚ö†Ô∏è –§–æ—Ç–æ {photo_url} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
                return existing_photo

            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Ñ–æ—Ç–æ
            photo = Photo(
                vk_id=user_vk_id,
                url=photo_url,
                likes_count=likes_count
            )
            session.add(photo)
            session.commit()

            print(f"‚úÖ –§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}, ID —Ñ–æ—Ç–æ: {photo.id}")
            return photo

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ: {e}")
            return None


def get_all_photo(user_vk_id: int) -> list:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏  –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Photo –ø–æ user_vk_id
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ Photo
    """
    with get_session() as session:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return []

            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            photos = session.query(Photo).filter(
                Photo.vk_id == user_vk_id
            ).all()

            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(photos)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return photos

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {e}")
            return []


def get_photo_list_url(user_vk_id: int) -> list:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ URL –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    """
    with get_session() as session:
        try:
            # –Ø–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return []

            photos = get_all_photo(user_vk_id)
            return [photo.url for photo in photos]

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {e}")
            return []


def delete_all_user_photos(user_vk_id: int) -> bool:
    """
    –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Photo
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    with get_session() as session:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            photos = session.query(Photo).filter(Photo.vk_id == user_vk_id).all()

            for photo in photos:
                session.delete(photo)

            session.commit()

            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(photos)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return True

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return False


def delete_photo_by_url(user_vk_id: int, photo_url: str) -> bool:
    """
    –£–¥–∞–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Ñ–æ—Ç–æ –ø–æ URL
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    """
    with get_session() as session:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = session.query(User).filter(User.vk_id == user_vk_id).first()
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_vk_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False

            # –ù–∞—Ö–æ–¥–∏–º —Ñ–æ—Ç–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            photo = session.query(Photo).filter(
                Photo.vk_id == user_vk_id,
                Photo.url == photo_url
            ).first()

            if not photo:
                print(f"‚ö†Ô∏è –§–æ—Ç–æ {photo_url} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
                return False

            # –£–¥–∞–ª—è–µ–º —Ñ–æ—Ç–æ
            session.delete(photo)
            session.commit()

            print(f"‚úÖ –§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_vk_id}")
            return True

        except Exception as e:
            session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ: {e}")
            return False