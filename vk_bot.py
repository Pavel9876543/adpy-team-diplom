import os
from datetime import datetime

from dotenv import load_dotenv
import vk_api
from vk_api.utils import get_random_id
from vk_api.longpoll import VkLongPoll, VkEventType

# -------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ --------------------
load_dotenv()
TOKEN = os.getenv("VK_BOT_TOKEN")

vk_session = vk_api.VkApi(token=TOKEN)
vk = vk_session.get_api()
longpoll = VkLongPoll(vk_session)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data_temp = {}

# -------------------- –§—É–Ω–∫—Ü–∏–∏ --------------------
def send_msg(user_id: int, text: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    vk.messages.send(user_id=user_id, message=text, random_id=get_random_id())

def get_user_info(user_id: int) -> dict:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è VK"""
    user = vk.users.get(user_ids=user_id, fields="city,sex,bdate")[0]
    bdate = user.get("bdate")  # —Ñ–æ—Ä–º–∞—Ç: "DD.MM.YYYY" –∏–ª–∏ "DD.MM"
    age = None
    if bdate and len(bdate.split(".")) == 3:
        year = int(bdate.split(".")[2])
        age = datetime.now().year - year
    return {
        "first_name": user.get("first_name"),
        "last_name": user.get("last_name"),
        "sex": user.get("sex"),  # 1 ‚Äî –∂–µ–Ω—â–∏–Ω–∞, 2 ‚Äî –º—É–∂—á–∏–Ω–∞
        "city": user.get("city", {}).get("title"),
        "age": age
    }

def check_missing_fields(user_info: dict, temp_data: dict) -> list:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç"""
    missing = []
    if user_info["sex"] == 0 and "sex" not in temp_data:
        missing.append("sex")
    if not user_info["city"] and "city" not in temp_data:
        missing.append("city")
    if user_info["age"] is None and "age" not in temp_data:
        missing.append("age")
    return missing

def request_field(user_id: int, field: str):
    """–ó–∞–ø—Ä–æ—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    prompts = {"sex": "–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª (–º/–∂):", "city": "–£–∫–∞–∂–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥:", "age": "–£–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ–º):"}
    send_msg(user_id, prompts[field])
    user_data_temp[user_id]["awaiting"] = field

def process_response(user_id: int, msg: str) -> bool:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ"""
    awaiting = user_data_temp[user_id].get("awaiting")
    if not awaiting:
        return False

    if awaiting == "sex":
        if msg in ["–º", "–º—É–∂", "–ø–∞—Ä–µ–Ω—å"]:
            user_data_temp[user_id]["sex"] = 2
        elif msg in ["–∂", "–∂–µ–Ω", "–¥–µ–≤—É—à–∫–∞"]:
            user_data_temp[user_id]["sex"] = 1
        else:
            send_msg(user_id, "–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: –º/–∂")
            return False
    elif awaiting == "city":
        user_data_temp[user_id]["city"] = msg.title()
    elif awaiting == "age":
        if not msg.isdigit() or int(msg) <= 0 or int(msg) > 120:
            send_msg(user_id, "–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 120).")
            return False
        user_data_temp[user_id]["age"] = int(msg)

    del user_data_temp[user_id]["awaiting"]
    return True

# -------------------- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª --------------------
for event in longpoll.listen():
    if event.type != VkEventType.MESSAGE_NEW or not event.to_me:
        continue

    user_id = event.user_id
    msg = event.text.strip().lower()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_data_temp:
        user_data_temp[user_id] = {}

    # –ï—Å–ª–∏ –∂–¥—ë–º –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    if "awaiting" in user_data_temp[user_id]:
        if not process_response(user_id, msg):
            continue  # –∂–¥—ë–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
    user_info = get_user_info(user_id)
    missing = check_missing_fields(user_info, user_data_temp[user_id])

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–¥–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–µ –ø–æ–ª–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if missing:
        request_field(user_id, missing[0])
        continue

    # –í—Å–µ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    sex_id = user_data_temp[user_id].get("sex", user_info["sex"])
    sex = "–ñ–µ–Ω" if sex_id == 1 else "–ú—É–∂" if sex_id == 2 else "–ù–µ —É–∫–∞–∑–∞–Ω"
    city = user_data_temp[user_id].get("city", user_info["city"])
    first_name = user_data_temp[user_id].get("first_name", user_info["first_name"])
    age = user_data_temp[user_id].get("age", user_info["age"])

    send_msg(user_id, f"‚úÖ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {first_name}!\n–¢–≤–æ–π –≥–æ—Ä–æ–¥: {city}\n–¢–≤–æ–π –ø–æ–ª: {sex}\n–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {age}")
    print(user_data_temp)
    user_data_temp.pop(user_id, None)
    print(user_data_temp)

    # --- TODO: –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –ø–æ–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
    # opposite_sex = 1 if final_sex == 2 else 2
    # send_msg(user_id, "üîç –ò—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ª—é–¥–µ–π...")
