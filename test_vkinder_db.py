#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î –¥–ª—è VKinder —Å –æ—á–∏—Å—Ç–∫–æ–π –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º
"""
from database import SessionLocal
from models.user import User
from models.photo import Photo
from models.favorite import Favorite
from models.blacklist import Blacklist

def cleanup_test_data():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º —Ç–µ—Å—Ç–æ–º"""
    db = SessionLocal()
    try:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        db.query(Blacklist).filter(Blacklist.user_id.in_([1, 2, 3])).delete()
        db.query(Favorite).filter(Favorite.user_id.in_([1, 2, 3])).delete()
        db.query(Photo).filter(Photo.vk_id.in_([987654321, 111111111, 777777777])).delete()
        db.query(User).filter(User.vk_id.in_([123456789, 987654321, 111111111, 777777777])).delete()
        db.commit()
        print("–°—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
    except Exception as e:
        db.rollback()
        print(f"–ü—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        db.close()

def test_vkinder_database():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î VKinder...")

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    cleanup_test_data()

    db = SessionLocal()
    try:
        # 1. –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è VK
        main_user = User()
        main_user.vk_id = 123456789
        main_user.first_name = "–ò–≤–∞–Ω"
        main_user.last_name = "–ü–µ—Ç—Ä–æ–≤"
        main_user.age = 28
        main_user.sex = 2  # 2 - –º—É–∂—Å–∫–æ–π, 1 - –∂–µ–Ω—Å–∫–∏–π
        main_user.city = "–ú–æ—Å–∫–≤–∞"
        main_user.music = "Rock, Jazz, Classical"
        main_user.books = "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞, –î–µ—Ç–µ–∫—Ç–∏–≤—ã"
        main_user.groups = "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"

        db.add(main_user)
        db.commit()
        db.refresh(main_user)
        print(f"–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {main_user.first_name} {main_user.last_name} (VK ID: {main_user.vk_id})")

        # 2. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        favorite_user = User()
        favorite_user.vk_id = 987654321
        favorite_user.first_name = "–ú–∞—Ä–∏—è"
        favorite_user.last_name = "–°–∏–¥–æ—Ä–æ–≤–∞"
        favorite_user.age = 25
        favorite_user.sex = 1  # –∂–µ–Ω—Å–∫–∏–π
        favorite_user.city = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
        favorite_user.music = "Pop, Indie"
        favorite_user.books = "–†–æ–º–∞–Ω—ã, –ü–æ—ç–∑–∏—è"
        favorite_user.groups = "–ò—Å–∫—É—Å—Å—Ç–≤–æ, –ö–∏–Ω–æ"

        db.add(favorite_user)
        db.commit()
        db.refresh(favorite_user)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω: {favorite_user.first_name} {favorite_user.last_name}")

        # 3. –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        photo1 = Photo()
        photo1.vk_id = favorite_user.vk_id
        photo1.url = "https://vk.com/photo1_large.jpg"
        photo1.likes_count = 15

        photo2 = Photo()
        photo2.vk_id = favorite_user.vk_id
        photo2.url = "https://vk.com/photo2_large.jpg"
        photo2.likes_count = 23

        db.add_all([photo1, photo2])
        db.commit()
        print(f"–°–æ–∑–¥–∞–Ω–æ 2 —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

        # 4. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
        favorite = Favorite()
        favorite.user_id = main_user.id
        favorite.favorite_vk_id = favorite_user.vk_id

        db.add(favorite)
        db.commit()
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.")

        # 5. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
        blocked_user = User()
        blocked_user.vk_id = 111111111
        blocked_user.first_name = "–ê–ª–µ–∫—Å–µ–π"
        blocked_user.last_name = "–ò–≤–∞–Ω–æ–≤"
        blocked_user.age = 35
        blocked_user.sex = 2
        blocked_user.city = "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"

        db.add(blocked_user)
        db.commit()
        db.refresh(blocked_user)

        blacklist = Blacklist()
        blacklist.user_id = main_user.id
        blacklist.blocked_vk_id = blocked_user.vk_id

        db.add(blacklist)
        db.commit()
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.")

        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏(?) –∏ –¥–∞–Ω–Ω—ã–µ
        users_count = db.query(User).count()
        photos_count = db.query(Photo).count()
        favorites_count = db.query(Favorite).count()
        blacklist_count = db.query(Blacklist).count()

        print(f"\n –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î:")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        print(f"   –§–æ—Ç–æ: {photos_count}")
        print(f"   –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º: {favorites_count}")
        print(f"   –í —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ: {blacklist_count}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏(?)
        main_user_favorites = db.query(Favorite).filter(Favorite.user_id == main_user.id).all()
        favorite_user_photos = db.query(Photo).filter(Photo.vk_id == favorite_user.vk_id).all()

        print(f"\n –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π:")
        print(f"   –£ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º: {len(main_user_favorites)} —á–µ–ª.")
        print(f"   –§–æ—Ç–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {len(favorite_user_photos)} —à—Ç.")

        # –ü–æ–∫–∞–∂–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
        print(f"\n –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:")
        for fav in main_user_favorites:
            fav_user = db.query(User).filter(User.vk_id == fav.favorite_vk_id).first()
            if fav_user:
                photos = db.query(Photo).filter(Photo.vk_id == fav_user.vk_id).all()
                print(f"   üë§ {fav_user.first_name} {fav_user.last_name} - {len(photos)} —Ñ–æ—Ç–æ")

        print("\n –ë–î VKinder –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç !")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        db.rollback()
        raise
    finally:
        db.close()

if __name__ == "__main__":
    test_vkinder_database()